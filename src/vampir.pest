WHITESPACE = _{ " " | "\t" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }
identifier = @{ ( 'a'..'z' | 'A'..'Z' | "_" ) ~ ( 'a'..'z' | 'A'..'Z' | "_" | '0'..'9' )* }

whole = @{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) }

// exponents are neither 0 nor 1
exponent = @{ (!"1" ~ ASCII_NONZERO_DIGIT) ~ ASCII_DIGIT* }

// Atomic and immutable data unit for the IR, a wire
wire = @{ identifier }
wire_list = { wire+ } // e.g. x y -- no arithmetics allowed

// alias statement defines an alias
alias_definition = { NEWLINE* ~ "def" ~ identifier ~ wire_list ~ ("->" ~ wire_list)? ~ "{" ~ circuit ~ "}" ~ NEWLINE* }

// alias invocations need to be surrounded by brackets to distinguish them
// from wire identifiers
alias_invocation = { "(" ~ identifier ~ wire_list? ~ ")" }

// operations
plus = { "+" }
minus = { "-" }
times = { "*" }

op = _{ plus | minus | times }

//base = { whole | wire }

exponential = { (whole | wire) ~ "^" ~ exponent }

monomial = { exponential | whole | wire | "(" ~ expression ~ ")"}

expression = { monomial ~ ( op ~ monomial )* }

equation = { expression ~ "=" ~ expression }

// a constraint is an expression on its own line
constraint = { NEWLINE* ~ ( equation | expression ) ~ NEWLINE* }

// a circuit is a list of constraints
circuit = { constraint+ }

// a preamble is a list of alias definitions
preamble = { alias_definition+ }
